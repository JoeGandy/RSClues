{"version":3,"sources":["webpack:///./src/pages/clue.js","webpack:///./node_modules/query-string/index.js","webpack:///./node_modules/strict-uri-encode/index.js","webpack:///./node_modules/decode-uri-component/index.js"],"names":["clues","json_data","render","_GET","queryString","parse","this","props","location","search","id","undefined","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_3__","_components_cluesearch__WEBPACK_IMPORTED_MODULE_4__","title","clue","className","clue_text","dangerouslySetInnerHTML","__html","clue_answer","clue_image","React","Component","strictUriEncode","__webpack_require__","decodeComponent","encode","value","options","strict","encodeURIComponent","decode","extract","input","queryStart","indexOf","slice","formatter","result","arrayFormat","key","accumulator","exec","replace","concat","parserForArrayFormat","Object","assign","ret","create","trim","param","split","keys","sort","reduce","Boolean","Array","isArray","keysSorter","b","Number","map","exports","stringify","obj","index","join","encoderForArrayFormat","value2","push","length","filter","x","parseUrl","hashStart","url","query","module","str","charCodeAt","toString","toUpperCase","singleMatcher","RegExp","multiMatcher","decodeComponents","components","decodeURIComponent","err","left","right","prototype","call","tokens","match","i","encodedURI","TypeError","replaceMap","%FE%FF","%FF%FE","entries","customDecodeURIComponent"],"mappings":"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","file":"component---src-pages-clue-js-8343cdd48c36977a9eba.js","sourcesContent":["import React from \"react\"\nimport Layout from \"../components/layout\";\nimport ClueSearch from \"../components/cluesearch\";\nimport * as json_data from '../data/export.js';\nimport queryString from 'query-string';\n\nconst clues = json_data.export_data;\n\nexport default class extends React.Component {\n\n    render() {\n        let _GET = queryString.parse(this.props.location.search);\n        let id = typeof (_GET.id) !== \"undefined\" ? _GET.id : -1;\n        if (clues[id] === undefined) {\n            return <Layout>\n                <h1>Clue id is not valid!</h1>\n                <ClueSearch title={\"Search your next step:\"}/>\n            </Layout>\n        }\n\n        let clue = clues[id];\n\n        return <Layout>\n            <ClueSearch title={\"Search your next step:\"}/>\n            <br/>\n            <div className=\"_clue_result\">\n                {clue.clue_text ? <div>\n                    <h2>Clue:</h2>\n                    <div dangerouslySetInnerHTML={{__html: clue.clue_text}}/>\n                </div> : \"\"}\n                {clue.clue_answer ? <div>\n                    <h2>Solution:</h2>\n                    <div dangerouslySetInnerHTML={{__html: clue.clue_answer}}/>\n                </div> : \"\"}\n                {clue.clue_image ? <div>\n                    <h2>Image:</h2>\n                    <div dangerouslySetInnerHTML={{__html: clue.clue_image}}/>\n                </div> : \"\"}\n            </div>\n        </Layout>\n    }\n}","'use strict';\nconst strictUriEncode = require('strict-uri-encode');\nconst decodeComponent = require('decode-uri-component');\n\nfunction encoderForArrayFormat(options) {\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn (key, value, index) => {\n\t\t\t\treturn value === null ? [\n\t\t\t\t\tencode(key, options),\n\t\t\t\t\t'[',\n\t\t\t\t\tindex,\n\t\t\t\t\t']'\n\t\t\t\t].join('') : [\n\t\t\t\t\tencode(key, options),\n\t\t\t\t\t'[',\n\t\t\t\t\tencode(index, options),\n\t\t\t\t\t']=',\n\t\t\t\t\tencode(value, options)\n\t\t\t\t].join('');\n\t\t\t};\n\t\tcase 'bracket':\n\t\t\treturn (key, value) => {\n\t\t\t\treturn value === null ? [encode(key, options), '[]'].join('') : [\n\t\t\t\t\tencode(key, options),\n\t\t\t\t\t'[]=',\n\t\t\t\t\tencode(value, options)\n\t\t\t\t].join('');\n\t\t\t};\n\t\tdefault:\n\t\t\treturn (key, value) => {\n\t\t\t\treturn value === null ? encode(key, options) : [\n\t\t\t\t\tencode(key, options),\n\t\t\t\t\t'=',\n\t\t\t\t\tencode(value, options)\n\t\t\t\t].join('');\n\t\t\t};\n\t}\n}\n\nfunction parserForArrayFormat(options) {\n\tlet result;\n\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /\\[(\\d*)\\]$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\d*\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = {};\n\t\t\t\t}\n\n\t\t\t\taccumulator[key][result[1]] = value;\n\t\t\t};\n\t\tcase 'bracket':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(\\[\\])$/.exec(key);\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\t\tdefault:\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\t}\n}\n\nfunction encode(value, options) {\n\tif (options.encode) {\n\t\treturn options.strict ? strictUriEncode(value) : encodeURIComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction decode(value, options) {\n\tif (options.decode) {\n\t\treturn decodeComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction keysSorter(input) {\n\tif (Array.isArray(input)) {\n\t\treturn input.sort();\n\t}\n\n\tif (typeof input === 'object') {\n\t\treturn keysSorter(Object.keys(input))\n\t\t\t.sort((a, b) => Number(a) - Number(b))\n\t\t\t.map(key => input[key]);\n\t}\n\n\treturn input;\n}\n\nfunction extract(input) {\n\tconst queryStart = input.indexOf('?');\n\tif (queryStart === -1) {\n\t\treturn '';\n\t}\n\n\treturn input.slice(queryStart + 1);\n}\n\nfunction parse(input, options) {\n\toptions = Object.assign({decode: true, arrayFormat: 'none'}, options);\n\n\tconst formatter = parserForArrayFormat(options);\n\n\t// Create an object with no prototype\n\tconst ret = Object.create(null);\n\n\tif (typeof input !== 'string') {\n\t\treturn ret;\n\t}\n\n\tinput = input.trim().replace(/^[?#&]/, '');\n\n\tif (!input) {\n\t\treturn ret;\n\t}\n\n\tfor (const param of input.split('&')) {\n\t\tlet [key, value] = param.replace(/\\+/g, ' ').split('=');\n\n\t\t// Missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tvalue = value === undefined ? null : decode(value, options);\n\n\t\tformatter(decode(key, options), value, ret);\n\t}\n\n\treturn Object.keys(ret).sort().reduce((result, key) => {\n\t\tconst value = ret[key];\n\t\tif (Boolean(value) && typeof value === 'object' && !Array.isArray(value)) {\n\t\t\t// Sort object keys, not values\n\t\t\tresult[key] = keysSorter(value);\n\t\t} else {\n\t\t\tresult[key] = value;\n\t\t}\n\n\t\treturn result;\n\t}, Object.create(null));\n}\n\nexports.extract = extract;\nexports.parse = parse;\n\nexports.stringify = (obj, options) => {\n\tif (!obj) {\n\t\treturn '';\n\t}\n\n\toptions = Object.assign({\n\t\tencode: true,\n\t\tstrict: true,\n\t\tarrayFormat: 'none'\n\t}, options);\n\n\tconst formatter = encoderForArrayFormat(options);\n\tconst keys = Object.keys(obj);\n\n\tif (options.sort !== false) {\n\t\tkeys.sort(options.sort);\n\t}\n\n\treturn keys.map(key => {\n\t\tconst value = obj[key];\n\n\t\tif (value === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (value === null) {\n\t\t\treturn encode(key, options);\n\t\t}\n\n\t\tif (Array.isArray(value)) {\n\t\t\tconst result = [];\n\n\t\t\tfor (const value2 of value.slice()) {\n\t\t\t\tif (value2 === undefined) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tresult.push(formatter(key, value2, result.length));\n\t\t\t}\n\n\t\t\treturn result.join('&');\n\t\t}\n\n\t\treturn encode(key, options) + '=' + encode(value, options);\n\t}).filter(x => x.length > 0).join('&');\n};\n\nexports.parseUrl = (input, options) => {\n\tconst hashStart = input.indexOf('#');\n\tif (hashStart !== -1) {\n\t\tinput = input.slice(0, hashStart);\n\t}\n\n\treturn {\n\t\turl: input.split('?')[0] || '',\n\t\tquery: parse(extract(input), options)\n\t};\n};\n","'use strict';\nmodule.exports = str => encodeURIComponent(str).replace(/[!'()*]/g, x => `%${x.charCodeAt(0).toString(16).toUpperCase()}`);\n","'use strict';\nvar token = '%[a-f0-9]{2}';\nvar singleMatcher = new RegExp(token, 'gi');\nvar multiMatcher = new RegExp('(' + token + ')+', 'gi');\n\nfunction decodeComponents(components, split) {\n\ttry {\n\t\t// Try to decode the entire string first\n\t\treturn decodeURIComponent(components.join(''));\n\t} catch (err) {\n\t\t// Do nothing\n\t}\n\n\tif (components.length === 1) {\n\t\treturn components;\n\t}\n\n\tsplit = split || 1;\n\n\t// Split the array in 2 parts\n\tvar left = components.slice(0, split);\n\tvar right = components.slice(split);\n\n\treturn Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));\n}\n\nfunction decode(input) {\n\ttry {\n\t\treturn decodeURIComponent(input);\n\t} catch (err) {\n\t\tvar tokens = input.match(singleMatcher);\n\n\t\tfor (var i = 1; i < tokens.length; i++) {\n\t\t\tinput = decodeComponents(tokens, i).join('');\n\n\t\t\ttokens = input.match(singleMatcher);\n\t\t}\n\n\t\treturn input;\n\t}\n}\n\nfunction customDecodeURIComponent(input) {\n\t// Keep track of all the replacements and prefill the map with the `BOM`\n\tvar replaceMap = {\n\t\t'%FE%FF': '\\uFFFD\\uFFFD',\n\t\t'%FF%FE': '\\uFFFD\\uFFFD'\n\t};\n\n\tvar match = multiMatcher.exec(input);\n\twhile (match) {\n\t\ttry {\n\t\t\t// Decode as big chunks as possible\n\t\t\treplaceMap[match[0]] = decodeURIComponent(match[0]);\n\t\t} catch (err) {\n\t\t\tvar result = decode(match[0]);\n\n\t\t\tif (result !== match[0]) {\n\t\t\t\treplaceMap[match[0]] = result;\n\t\t\t}\n\t\t}\n\n\t\tmatch = multiMatcher.exec(input);\n\t}\n\n\t// Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else\n\treplaceMap['%C2'] = '\\uFFFD';\n\n\tvar entries = Object.keys(replaceMap);\n\n\tfor (var i = 0; i < entries.length; i++) {\n\t\t// Replace all decoded components\n\t\tvar key = entries[i];\n\t\tinput = input.replace(new RegExp(key, 'g'), replaceMap[key]);\n\t}\n\n\treturn input;\n}\n\nmodule.exports = function (encodedURI) {\n\tif (typeof encodedURI !== 'string') {\n\t\tthrow new TypeError('Expected `encodedURI` to be of type `string`, got `' + typeof encodedURI + '`');\n\t}\n\n\ttry {\n\t\tencodedURI = encodedURI.replace(/\\+/g, ' ');\n\n\t\t// Try the built in decoder first\n\t\treturn decodeURIComponent(encodedURI);\n\t} catch (err) {\n\t\t// Fallback to a more advanced decoder\n\t\treturn customDecodeURIComponent(encodedURI);\n\t}\n};\n"],"sourceRoot":""}